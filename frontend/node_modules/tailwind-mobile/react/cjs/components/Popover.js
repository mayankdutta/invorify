"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _cls = require("../shared/cls.js");

var _positionClass = require("../shared/position-class.js");

var _useThemeClasses = require("../shared/use-theme-classes.js");

var _useTheme = require("../shared/use-theme.js");

var _calcPopoverPosition = require("../shared/calc-popover-position.js");

var _useDarkClasses = require("../shared/use-dark-classes.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Popover = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  const {
    component = 'div',
    className,
    angleClassName = '',
    colors: colorsProp,
    size = 'w-64',
    opened,
    backdrop = true,
    onBackdropClick,
    target,
    targetX,
    targetY,
    targetWidth,
    targetHeight,
    translucent = true,
    ios,
    material,
    // Children
    children,
    // Rest
    style = {},
    ...rest
  } = props;
  const elRef = (0, _react.useRef)(null);
  const angleElRef = (0, _react.useRef)(null);
  const [positions, setPositions] = (0, _react.useState)({
    set: false,
    angleTop: 0,
    angleLeft: 0,
    anglePosition: 'bottom',
    popoverTop: 0,
    popoverLeft: 0,
    popoverPosition: 'top-left'
  });
  (0, _react.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const state = opened ? 'opened' : 'closed';
  const Component = component;
  const attrs = { ...rest
  };
  const theme = (0, _useTheme.useTheme)({
    ios,
    material
  });
  const themeClasses = (0, _useThemeClasses.useThemeClasses)({
    ios,
    material
  });
  const dark = (0, _useDarkClasses.useDarkClasses)();
  const colors = {
    bg: (0, _cls.cls)('bg-popover-light', dark('dark:bg-popover-dark')),
    ...colorsProp
  };
  const c = themeClasses({
    base: {
      common: (0, _cls.cls)('transition-transform-opacity duration-300 z-40 no-safe-areas', (0, _positionClass.positionClass)('fixed', className), size),
      ios: '',
      material: '',
      opened: '',
      closed: {
        common: 'opacity-0 pointer-events-none',
        ios: '',
        material: 'scale-x-90 scale-y-75'
      }
    },
    inner: {
      common: (0, _cls.cls)('overflow-hidden relative', colors.bg),
      ios: (0, _cls.cls)('rounded-xl', translucent && 'translucent'),
      material: 'rounded shadow-lg'
    },
    angleWrap: {
      common: (0, _cls.cls)(angleClassName || ''),
      ios: (0, _cls.cls)('absolute w-6.5 h-6.5 z-50 overflow-hidden', translucent && 'opacity-80'),
      bottom: 'top-full',
      top: 'bottom-full',
      left: 'right-full',
      right: 'left-full'
    },
    angleArrow: {
      common: (0, _cls.cls)(colors.bg, 'absolute rounded w-full h-full transform rotate-45'),
      bottom: '-top-4.75',
      top: 'top-4.75',
      left: 'left-4.75',
      right: '-left-4.75'
    },
    backdrop: {
      common: 'fixed z-40 w-full h-full left-0 top-0 bg-black bg-opacity-50 duration-300',
      opened: '',
      closed: 'opacity-0 pointer-events-none'
    }
  }, className);

  const setPopover = () => {
    if (!target || !elRef.current || !opened) return;
    setPositions((0, _calcPopoverPosition.calcPopoverPosition)({
      popoverEl: elRef.current,
      targetEl: target,
      angleEl: angleElRef.current,
      theme
    }));
  };

  const attachEvents = () => {
    if (typeof window === 'undefined') return;
    window.addEventListener('resize', setPopover);
  };

  const detachEvents = () => {
    if (typeof window === 'undefined') return;
    window.removeEventListener('resize', setPopover);
  };

  (0, _react.useEffect)(() => {
    attachEvents();
    return () => detachEvents();
  });
  (0, _react.useEffect)(() => {
    setPopover();
  }, [opened]);
  const popoverStyle = positions.set ? { ...(style || {}),
    left: positions.popoverLeft,
    top: positions.popoverTop
  } : style;
  const angleStyle = positions.set ? {
    left: positions.angleLeft,
    top: positions.angleTop
  } : undefined;
  const originClasses = {
    'top-right': 'origin-bottom-left',
    'top-left': 'origin-bottom-right',
    'middle-left': 'origin-right',
    'middle-right': 'origin-left',
    'bottom-right': 'origin-top-left',
    'bottom-left': 'origin-top-right'
  };
  const classes = (0, _cls.cls)(c.base[state], theme === 'material' && originClasses[positions.popoverPosition]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, backdrop && /*#__PURE__*/_react.default.createElement("div", {
    className: c.backdrop[state],
    onClick: onBackdropClick
  }), /*#__PURE__*/_react.default.createElement(Component, _extends({
    ref: elRef,
    className: classes,
    style: popoverStyle
  }, attrs), theme === 'ios' && /*#__PURE__*/_react.default.createElement("div", {
    ref: angleElRef,
    style: angleStyle,
    className: c.angleWrap[positions.anglePosition]
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: c.angleArrow[positions.anglePosition]
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: c.inner
  }, children)));
});
Popover.displayName = 'Popover';
var _default = Popover;
exports.default = _default;