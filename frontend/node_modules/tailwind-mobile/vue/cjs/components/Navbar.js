"use strict";

exports.__esModule = true;
exports.default = void 0;

var _vue = require("vue");

var _cls = require("../shared/cls.js");

var _positionClass = require("../shared/position-class.js");

var _useThemeClasses = require("../shared/use-theme-classes.js");

var _useDarkClasses = require("../shared/use-dark-classes.js");

function render(_ctx, _cache) {
  return (0, _vue.openBlock)(), (0, _vue.createBlock)((0, _vue.resolveDynamicComponent)(_ctx.component), {
    class: (0, _vue.normalizeClass)(_ctx.c.base)
  }, {
    default: (0, _vue.withCtx)(() => [(0, _vue.createElementVNode)("div", {
      class: (0, _vue.normalizeClass)(_ctx.c.bg)
    }, null, 2), (0, _vue.createElementVNode)("div", {
      class: (0, _vue.normalizeClass)(_ctx.c.inner)
    }, [_ctx.slots.left ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
      key: 0,
      class: (0, _vue.normalizeClass)(_ctx.c.left)
    }, [(0, _vue.renderSlot)(_ctx.$slots, "left")], 2)) : (0, _vue.createCommentVNode)("", true), _ctx.title || _ctx.subtitle || _ctx.slots.title || _ctx.slots.subtitle ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
      key: 1,
      class: (0, _vue.normalizeClass)(_ctx.c.title)
    }, [(0, _vue.createTextVNode)((0, _vue.toDisplayString)(_ctx.title), 1), (0, _vue.renderSlot)(_ctx.$slots, "title"), _ctx.subtitle || _ctx.slots.subtitle ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
      key: 0,
      class: (0, _vue.normalizeClass)(_ctx.c.subtitle)
    }, [(0, _vue.createTextVNode)((0, _vue.toDisplayString)(_ctx.subtitle), 1), (0, _vue.renderSlot)(_ctx.$slots, "subtitle")], 2)) : (0, _vue.createCommentVNode)("", true)], 2)) : (0, _vue.createCommentVNode)("", true), _ctx.slots.right ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
      key: 2,
      class: (0, _vue.normalizeClass)(_ctx.c.right)
    }, [(0, _vue.renderSlot)(_ctx.$slots, "right")], 2)) : (0, _vue.createCommentVNode)("", true), (0, _vue.renderSlot)(_ctx.$slots, "default")], 2), _ctx.slots.subnavbar ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {
      key: 0,
      class: (0, _vue.normalizeClass)(_ctx.c.subnavbar)
    }, [(0, _vue.renderSlot)(_ctx.$slots, "subnavbar")], 2)) : (0, _vue.createCommentVNode)("", true)]),
    _: 3
  }, 8, ["class"]);
}

var _default = {
  name: 'twm-navbar',
  render,
  props: {
    component: {
      type: String,
      default: 'div'
    },
    colors: {
      type: Object
    },
    ios: {
      type: Boolean,
      default: undefined
    },
    material: {
      type: Boolean,
      default: undefined
    },
    bgClass: {
      type: String,
      default: ''
    },
    innerClass: {
      type: String,
      default: ''
    },
    leftClass: {
      type: String,
      default: ''
    },
    titleClass: {
      type: String,
      default: ''
    },
    subtitleClass: {
      type: String,
      default: ''
    },
    rightClass: {
      type: String,
      default: ''
    },
    subnavbarClass: {
      type: String,
      default: ''
    },
    translucent: {
      type: Boolean,
      default: true
    },
    hairlines: {
      type: Boolean,
      default: true
    },
    fontSizeIos: {
      type: String,
      default: 'text-navbar-ios'
    },
    fontSizeMaterial: {
      type: String,
      default: 'text-navbar-material'
    },
    title: String,
    subtitle: String
  },

  setup(props, ctx) {
    const colors = (0, _vue.computed)(() => ({
      bgIos: (0, _cls.cls)('bg-bars-ios-light', (0, _useDarkClasses.useDarkClasses)('dark:bg-bars-ios-dark')),
      bgMaterial: (0, _cls.cls)('bg-bars-material-light', (0, _useDarkClasses.useDarkClasses)('dark:bg-bars-material-dark')),
      title: (0, _cls.cls)('text-black', (0, _useDarkClasses.useDarkClasses)('dark:text-white')),
      ...(props.colors || {})
    }));
    const c = (0, _useThemeClasses.useThemeClasses)(props, () => ({
      base: {
        common: (0, _cls.cls)(`w-full z-20 top-0 pt-safe`, (0, _positionClass.positionClass)('sticky', ctx.attrs.class)),
        ios: props.fontSizeIos,
        material: props.fontSizeMaterial
      },
      bg: {
        common: (0, _cls.cls)('absolute w-full h-full left-0 top-0', props.bgClass),
        ios: (0, _cls.cls)(colors.value.bgIos, props.hairlines && 'hairline-b', props.translucent && 'translucent'),
        material: `shadow-md ${colors.value.bgMaterial}`
      },
      subnavbar: {
        common: (0, _cls.cls)('relative flex items-center', props.subnavbarClass),
        ios: 'h-11 pl-2-safe pr-2-safe',
        material: 'h-12 pl-4-safe pr-4-safe'
      },
      inner: {
        common: (0, _cls.cls)('flex relative items-center w-full overflow-hidden', props.innerClass),
        ios: (0, _cls.cls)('pl-2-safe pr-2-safe h-11', !ctx.slots.left && ctx.slots.right ? 'justify-end' : 'justify-between'),
        material: 'justify-start h-14 lg:h-16 pl-safe pr-safe'
      },
      left: {
        common: (0, _cls.cls)('flex justify-center items-center h-full', props.leftClass),
        ios: 'mr-2 transform transform-gpu',
        material: 'mx-1'
      },
      title: {
        common: (0, _cls.cls)(`${colors.value.title} whitespace-nowrap leading-tight`, props.titleClass),
        ios: 'font-semibold absolute top-1/2 left-1/2 transform-gpu -translate-x-1/2 -translate-y-1/2 text-center',
        material: 'font-medium mx-4 text-left'
      },
      subtitle: {
        common: (0, _cls.cls)('font-normal leading-none', props.subtitleClass),
        ios: 'text-2xs opacity-55',
        material: 'text-sm opacity-85'
      },
      right: {
        common: (0, _cls.cls)('flex justify-center items-center h-full', props.rightClass),
        ios: 'ml-2 transform transform-gpu',
        material: 'ml-auto mr-1'
      }
    }));
    return {
      c,
      slots: ctx.slots
    };
  }

};
exports.default = _default;