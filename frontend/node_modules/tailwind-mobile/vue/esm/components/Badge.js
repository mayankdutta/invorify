import { renderSlot as _renderSlot, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from "vue";

function render(_ctx, _cache) {
  return _openBlock(), _createBlock(_resolveDynamicComponent(_ctx.component), {
    class: _normalizeClass(_ctx.c.base[_ctx.size])
  }, {
    default: _withCtx(() => [_renderSlot(_ctx.$slots, "default")]),
    _: 3
  }, 8, ["class"]);
}

import { computed } from 'vue';
import { useThemeClasses } from '../shared/use-theme-classes.js';
export default {
  name: 'twm-badge',
  render,
  props: {
    component: {
      type: String,
      default: 'span'
    },
    small: {
      type: Boolean,
      default: false
    },
    colors: {
      type: Object
    },
    ios: {
      type: Boolean,
      default: undefined
    },
    material: {
      type: Boolean,
      default: undefined
    }
  },

  setup(props) {
    const colors = computed(() => ({
      bg: 'bg-primary',
      text: 'text-white',
      ...(props.colors || {})
    }));
    const size = computed(() => props.small ? 'sm' : 'md');
    const c = useThemeClasses(props, () => ({
      base: {
        common: `${colors.value.bg} ${colors.value.text} inline-flex items-center justify-center rounded-full leading-none`,
        ios: `font-semibold`,
        material: `font-medium`,
        sm: 'text-2xs min-w-4 min-h-4 px-0.5',
        md: 'text-xs min-w-5 min-h-5 px-1.5 py-0.5'
      }
    }));
    return {
      c,
      size
    };
  }

};