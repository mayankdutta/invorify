[{"/Users/info/Documents/GitHub/invorify/frontend/src/index.tsx":"1","/Users/info/Documents/GitHub/invorify/frontend/src/App.tsx":"2","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/index.tsx":"3","/Users/info/Documents/GitHub/invorify/frontend/src/Store/index.js":"4","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Companies/index.js":"5","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Invoices/index.js":"6","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/FinancialInstitution/index.js":"7","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Credentials/index.tsx":"8","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/LandingPage/index.tsx":"9","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/index.tsx":"10","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Navbar/index.jsx":"11","/Users/info/Documents/GitHub/invorify/frontend/src/Store/Reducers/index.ts":"12","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Button.tsx":"13","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Modal.tsx":"14","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/ModalHeader.tsx":"15","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/ModalBody.tsx":"16","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/ModalFooter.tsx":"17","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Footer.tsx":"18","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Toast.tsx":"19","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/TextData.tsx":"20","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Spinner.tsx":"21","/Users/info/Documents/GitHub/invorify/frontend/src/Store/Reducers/CurrencyReducer.ts":"22","/Users/info/Documents/GitHub/invorify/frontend/src/Store/Reducers/UserReducer.ts":"23","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Invoices/List/index.js":"24","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Companies/Components/Form/index.js":"25","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/FinancialInstitution/Components/List/index.js":"26","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Credentials/Components/LoginPage/index.tsx":"27","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Credentials/Components/RegistrationPage/index.tsx":"28"},{"size":219,"mtime":1636792816887,"results":"29","hashOfConfig":"30"},{"size":246,"mtime":1636824691394,"results":"31","hashOfConfig":"30"},{"size":1206,"mtime":1636825952480,"results":"32","hashOfConfig":"30"},{"size":420,"mtime":1636792816886,"results":"33","hashOfConfig":"30"},{"size":231,"mtime":1636792816878,"results":"34","hashOfConfig":"30"},{"size":242,"mtime":1636792816881,"results":"35","hashOfConfig":"30"},{"size":254,"mtime":1636792816881,"results":"36","hashOfConfig":"30"},{"size":721,"mtime":1636792816880,"results":"37","hashOfConfig":"30"},{"size":974,"mtime":1636792816882,"results":"38","hashOfConfig":"30"},{"size":445,"mtime":1636792816877,"results":"39","hashOfConfig":"30"},{"size":8636,"mtime":1636828722999,"results":"40","hashOfConfig":"30"},{"size":317,"mtime":1636792816886,"results":"41","hashOfConfig":"30"},{"size":1483,"mtime":1636792816874,"results":"42","hashOfConfig":"30"},{"size":893,"mtime":1636792816874,"results":"43","hashOfConfig":"30"},{"size":600,"mtime":1636792816876,"results":"44","hashOfConfig":"30"},{"size":271,"mtime":1636792816875,"results":"45","hashOfConfig":"30"},{"size":391,"mtime":1636792816875,"results":"46","hashOfConfig":"30"},{"size":1929,"mtime":1636827091031,"results":"47","hashOfConfig":"30"},{"size":1522,"mtime":1636792816877,"results":"48","hashOfConfig":"30"},{"size":557,"mtime":1636792816876,"results":"49","hashOfConfig":"30"},{"size":486,"mtime":1636792816876,"results":"50","hashOfConfig":"30"},{"size":493,"mtime":1636792816885,"results":"51","hashOfConfig":"30"},{"size":451,"mtime":1636792816886,"results":"52","hashOfConfig":"30"},{"size":6239,"mtime":1636828609999,"results":"53","hashOfConfig":"30"},{"size":6403,"mtime":1636827378941,"results":"54","hashOfConfig":"30"},{"size":7830,"mtime":1636828538613,"results":"55","hashOfConfig":"30"},{"size":5782,"mtime":1636827428210,"results":"56","hashOfConfig":"30"},{"size":5451,"mtime":1636792816879,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"86c649",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},"/Users/info/Documents/GitHub/invorify/frontend/src/index.tsx",[],["123","124"],"/Users/info/Documents/GitHub/invorify/frontend/src/App.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Routes/index.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Store/index.js",[],["125","126"],"/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Companies/index.js",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Invoices/index.js",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Routes/FinancialInstitution/index.js",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Credentials/index.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Routes/LandingPage/index.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/index.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Navbar/index.jsx",["127","128","129"],"import * as React from \"react\";\r\nimport { Disclosure, Menu, Transition } from \"@headlessui/react\";\r\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport { useHistory, useLocation, NavLink } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport logo from \"../../utils/logo.png\";\r\nimport user from \"../../utils/user.png\";\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst Navbar = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  let type = JSON.parse(localStorage.getItem(\"user\")).type;\r\n\r\n  const navigation = [\r\n    {\r\n      name: type === \"companies\" ? \"Companies\" : \"Financial Institution\",\r\n      href: type === \"companies\" ? \"/Companies\" : \"/FinancialInstitution\",\r\n      current:\r\n        location.pathname === \"/Companies\" ||\r\n        location.pathname === \"/FinancialInstitution\",\r\n    },\r\n  ];\r\n\r\n  if (type === \"companies\") {\r\n    navigation.push({\r\n      name: \"Invoices\",\r\n      href: \"/Invoices\",\r\n      current: location.pathname === \"/Invoices\",\r\n    });\r\n  }\r\n\r\n  const logStatus = localStorage.getItem(\"jwt\") ? \"Log Out\" : \"Log In\";\r\n\r\n  const Logout = () => {\r\n    history.push(`/`);\r\n    toast.success(\"Logged Out\");\r\n    localStorage.setItem(\"jwt\", \"\");\r\n    localStorage.setItem(\"user\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full my-4 bg-black \">\r\n      <Disclosure as=\"nav\" className=\"\">\r\n        {({ open }) => (\r\n          <>\r\n            <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n              <div className=\"relative flex items-center justify-between h-16\">\r\n                <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                  {/* Mobile menu button*/}\r\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                    <span className=\"sr-only\">Open main menu</span>\r\n                    {open ? (\r\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </Disclosure.Button>\r\n                </div>\r\n                <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                  <div className=\"flex-shrink-0 flex items-center\">\r\n                    <img\r\n                      className=\"block lg:hidden h-16 w-auto rounded-full\"\r\n                      src={logo}\r\n                      alt=\"Invorify\"\r\n                    />\r\n                    <img\r\n                      className=\"hidden lg:block h-16 w-auto mb-1 rounded-full\"\r\n                      src={logo}\r\n                      alt=\"Invorify\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"hidden sm:flex flex-row justify-center items-center ml-4\">\r\n                    <div>\r\n                      {navigation.map((item) => (\r\n                        <NavLink\r\n                          key={item.name}\r\n                          to={item.href}\r\n                          className={classNames(\r\n                            item.current\r\n                              ? \"bg-gray-800 text-white\"\r\n                              : \"text-gray-300 hover:bg-gray-700 hover:text-white\",\r\n                            \"px-3 py-2 rounded-md text-2xl font-sans ml-2 font-bold\"\r\n                          )}\r\n                          aria-current={item.current ? \"page\" : undefined}\r\n                        >\r\n                          {item.name}\r\n                        </NavLink>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n                  {/* Profile dropdown */}\r\n                  <Menu as=\"div\" className=\"ml-3 relative\">\r\n                    {({ open }) => (\r\n                      <>\r\n                        <div>\r\n                          <Menu.Button\r\n                            className=\"bg-gray-800 flex text-sm rounded-full \r\n                          outline-none ring-2 ring-gray-500\"\r\n                          >\r\n                            <span className=\"sr-only\">Open user menu</span>\r\n                            <img\r\n                              className={\"h-12 w-auto rounded-full \"}\r\n                              src={user}\r\n                              alt=\"\"\r\n                            />\r\n                          </Menu.Button>\r\n                        </div>\r\n                        <Transition\r\n                          show={open}\r\n                          as={React.Fragment}\r\n                          enter=\"transition ease-out duration-100\"\r\n                          enterFrom=\"transform opacity-0 scale-95\"\r\n                          enterTo=\"transform opacity-100 scale-100\"\r\n                          leave=\"transition ease-in duration-75\"\r\n                          leaveFrom=\"transform opacity-100 scale-100\"\r\n                          leaveTo=\"transform opacity-0 scale-95\"\r\n                        >\r\n                          <Menu.Items\r\n                            static\r\n                            className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                          >\r\n                            <Menu.Item>\r\n                              {({ active }) => (\r\n                                <a\r\n                                  href=\"#\"\r\n                                  className={classNames(\r\n                                    active ? \"bg-gray-100\" : \"\",\r\n                                    \"block px-4 py-2 text-sm text-gray-700 font-sans text-xl font-medium \"\r\n                                  )}\r\n                                >\r\n                                  Your Profile\r\n                                </a>\r\n                              )}\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                              {({ active }) => (\r\n                                <a\r\n                                  href=\"#\"\r\n                                  className={classNames(\r\n                                    active ? \"bg-gray-100\" : \"\",\r\n                                    \"block px-4 py-2 text-sm text-gray-700 font-sans text-xl font-medium \"\r\n                                  )}\r\n                                >\r\n                                  Settings\r\n                                </a>\r\n                              )}\r\n                            </Menu.Item>\r\n                            <Menu.Item onClick={Logout}>\r\n                              {({ active }) => (\r\n                                <a\r\n                                  className={classNames(\r\n                                    active ? \"bg-red-500 text-white\" : \"\",\r\n                                    \"block px-4 py-2 text-sm text-gray-700 cursor-pointer font-sans text-xl font-medium \"\r\n                                  )}\r\n                                >\r\n                                  {logStatus}\r\n                                </a>\r\n                              )}\r\n                            </Menu.Item>\r\n                          </Menu.Items>\r\n                        </Transition>\r\n                      </>\r\n                    )}\r\n                  </Menu>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Disclosure.Panel className=\"sm:hidden\">\r\n              <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n                {navigation.map((item) => (\r\n                  <a\r\n                    key={item.name}\r\n                    href={item.href}\r\n                    className={classNames(\r\n                      item.current\r\n                        ? \"bg-gray-900 text-white\"\r\n                        : \"text-gray-300 hover:bg-gray-700 hover:text-white\",\r\n                      \"block px-3 py-2 rounded-md text-base font-medium\"\r\n                    )}\r\n                    aria-current={item.current ? \"page\" : undefined}\r\n                  >\r\n                    {item.name}\r\n                  </a>\r\n                ))}\r\n              </div>\r\n            </Disclosure.Panel>\r\n          </>\r\n        )}\r\n      </Disclosure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/Users/info/Documents/GitHub/invorify/frontend/src/Store/Reducers/index.ts",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Button.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Modal.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/ModalHeader.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/ModalBody.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/ModalFooter.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Footer.tsx",["130","131","132","133","134"],"import * as React from \"react\";\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer className=\"w-full flex items-center justify-center bg-black\">\r\n      <div className=\"md:w-2/3 w-full px-4 sm:px-12 pb-10 text-white flex flex-col\">\r\n        <div className=\"w-full text-7xl font-bold pt-8 \">\r\n          <h1 className=\"w-full md:w-2/3\">How can we help you. get in touch</h1>\r\n        </div>\r\n        <div className=\"flex mt-8 flex-col md:flex-row md:justify-between\">\r\n          <p className=\"w-full md:w-2/3 text-gray-400\">\r\n            Feel free to give feedback\r\n          </p>\r\n          <div className=\"w-44 pt-3 md:pt-0\">\r\n            <a\r\n              className=\"bg-red-500 justify-center text-center rounded-lg shadow\r\n             px-10 py-3 flex items-center cursor-pointer\"\r\n            >\r\n              Contact\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col justify-center\">\r\n          <div className=\"flex mt-16 mb-12 sm:px-10 md:px-24 lg:px-44 flex-row items-center justify-around\">\r\n            <a href=\"https://github.com/\" target=\"_blank\">\r\n              <i className=\"bx bxl-github text-5xl cursor-pointer\" />\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/\" target=\"_blank\">\r\n              <i className=\"bx bxl-linkedin text-5xl cursor-pointer\" />\r\n            </a>\r\n            <a href=\"https://twitter.com/\" target=\"_blank\">\r\n              <i className=\"bx bxl-twitter text-5xl cursor-pointer\" />\r\n            </a>\r\n            <a href=\"https://www.instagram.com/\" target=\"_blank\">\r\n              <i className=\"bx bxl-instagram text-5xl cursor-pointer\" />\r\n            </a>\r\n          </div>\r\n          <hr className=\"border-gray-600\" />\r\n          <p className=\"w-full text-center mt-4 text-gray-600\">\r\n            Created by HolyUranus\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Toast.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/TextData.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Components/Atoms/Spinner.tsx",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Store/Reducers/CurrencyReducer.ts",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Store/Reducers/UserReducer.ts",[],"/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Invoices/List/index.js",["135","136","137","138"],"import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport moment from \"moment\";\r\n\r\nconst formHeading =\r\n  \" text-base tracking-wider font-bold font-sans px-6 py-3 text-left text-xs font-medium text-gray-500  tracking-wider\";\r\nconst inputCss = \"focus:outline-none focus:ring-4 focus:ring-green-600\";\r\n\r\nconst List = ({}) => {\r\n  const [list, setList] = React.useState([]);\r\n  const [flagToRefetch, setFlagToRefetch] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    toast.loading(\"Fetching Invoices\", { id: \"Inv\" });\r\n    let userId = JSON.parse(localStorage.getItem(\"user\"))._id;\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_SERVER_LINK}/file/fetchInvCompany`,\r\n        { userId },\r\n        {\r\n          headers: {\r\n            Authorization: JSON.parse(localStorage.getItem(\"jwt\")),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        toast.success(\"Invoices Fetched\");\r\n        toast.dismiss(\"Inv\");\r\n        setList(res.data);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data);\r\n        toast.dismiss(\"Inv\");\r\n        console.error(error);\r\n      });\r\n  }, [flagToRefetch]);\r\n\r\n  const Delete = (id) => {\r\n    toast.loading(\"Deleting\", { id: \"delete\" });\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_SERVER_LINK}/file/DeleteInvoice`,\r\n        { id },\r\n        {\r\n          headers: {\r\n            Authorization: JSON.parse(localStorage.getItem(\"jwt\")),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Deleted\");\r\n        toast.dismiss(\"delete\");\r\n        setFlagToRefetch(!flagToRefetch);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data);\r\n        toast.dismiss(\"delete\");\r\n        console.error(error);\r\n        setFlagToRefetch(!flagToRefetch);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"flex flex-col sm:w-4/5 lg:w-1/2 w-full my-12 \r\n    min-h-1/2 border shadow-lg \"\r\n    >\r\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Sr. No.\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Date\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Financial Institute\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Invoice No.\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Status\r\n                  </th>\r\n                  <th scope=\"col\" />\r\n                  <th scope=\"col\" />\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {list.map((item, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {index + 1}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {moment(item.createdAt).format(\"DD/MM/YYYY\") || \"N/A\"}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {moment(item.createdAt).format(\"hh:mm a\") || \"N/A\"}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {item.financial.name || \"N/A\"}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {item.financial.userName || \"N/A\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {item.invoice || \"N/A\"}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span\r\n                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                            item.status === \"pending\"\r\n                              ? \"bg-red-100 text-red-800\"\r\n                              : \"bg-green-100 text-green-800\"\r\n                          }`}\r\n                        >\r\n                          {item.status || \"N/A\"}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"pr-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <a\r\n                          href=\"#\"\r\n                          className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        >\r\n                          Show PDF\r\n                        </a>\r\n                      </td>\r\n                      <td className=\"pr-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <a\r\n                          onClick={() => {\r\n                            Delete(item._id);\r\n                          }}\r\n                          className=\"text-indigo-600 hover:text-indigo-900 cursor-pointer\"\r\n                        >\r\n                          Delete\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Companies/Components/Form/index.js",["139","140"],"import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport logo from \"../../../../utils/logo.png\";\r\nimport { Button } from \"../../../../Components/Atoms\";\r\nimport { Spinner } from \"../../../../Components/Atoms\";\r\nimport Select from \"react-select\";\r\n\r\nconst formHeading = \" text-lg tracking-wider font-bold font-sans\";\r\nconst inputCss = \"focus:outline-none focus:ring-4 focus:ring-green-600\";\r\n\r\nconst Form = ({}) => {\r\n  const [invoice, setInvoice] = React.useState(\"\");\r\n  const [userPdf, setUserPdf] = React.useState(null);\r\n  const [financial, setFinancial] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [instLoading, setInstLoading] = React.useState(false);\r\n  const [instData, setInstData] = React.useState([]);\r\n\r\n  const options = [];\r\n\r\n  const dataToOption = (instData) => {\r\n    instData.map((curr) => {\r\n      options.push({ value: curr._id, label: curr.name });\r\n    });\r\n    return options;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setInstLoading(true);\r\n    toast.loading(\"Fetching Financial Institutions\", { id: \"finst\" });\r\n    axios\r\n      .get(`${process.env.REACT_APP_SERVER_LINK}/profile/financialInst`, {\r\n        headers: {\r\n          Authorization: JSON.parse(localStorage.getItem(\"jwt\")),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        toast.success(\"Financial Institutions Fetched\");\r\n        toast.dismiss(\"finst\");\r\n        setInstData(res.data);\r\n        setInstLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        toast.error(error.response.data);\r\n        toast.dismiss(\"finst\");\r\n        setInstLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  let userId = JSON.parse(localStorage.getItem(\"user\"))._id;\r\n\r\n  const Submit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    toast.loading(\"Uploading file\", { id: \"file\" });\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_SERVER_LINK}/file/`,\r\n        {\r\n          userId,\r\n          invoice,\r\n          userPdf,\r\n          financial,\r\n          status: \"pending\",\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: JSON.parse(localStorage.getItem(\"jwt\")),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false);\r\n        toast.success(\"File saved successfully\");\r\n        toast.dismiss(\"file\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast.error(error.response.data);\r\n        toast.dismiss(\"file\");\r\n      });\r\n  };\r\n\r\n  const NotSubmit = (e) => {\r\n    e.preventDefault();\r\n    toast.error(\"Please select Financial Institution\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"bg-black shadow-2xl rounded rounded-lg p-12 px-8 \r\n    flex flex-col justify-center items-center mb-14\"\r\n        onSubmit={financial !== null ? Submit : NotSubmit}\r\n      >\r\n        <img\r\n          className=\"h-32 w-auto mb-6 rounded-full\"\r\n          src={logo}\r\n          alt=\"invorify\"\r\n        />\r\n        <div className=\"mb-6\">\r\n          <label className={\"block text-gray-200 mb-2\" + formHeading}>\r\n            Invoice\r\n          </label>\r\n          <input\r\n            className={\r\n              \"w-64 shadow appearance-none border rounded py-2 px-3 text-gray-800 leading-tight \" +\r\n              inputCss\r\n            }\r\n            id=\"invoice\"\r\n            placeholder=\"Enter Invoice\"\r\n            value={invoice}\r\n            onChange={(e) => setInvoice(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <label\r\n            className={\r\n              \"block text-gray-200 text-sm font-bold mb-2\" + formHeading\r\n            }\r\n          >\r\n            Financial Institution\r\n          </label>\r\n          <Select\r\n            onChange={(e) => {\r\n              setFinancial(e?.value);\r\n            }}\r\n            isLoading={instLoading}\r\n            options={dataToOption(instData)}\r\n            defaultValue={{\r\n              label: \"Select Financial Institution\",\r\n              value: null,\r\n            }}\r\n            className=\"text-white w-64\"\r\n            theme={(theme) => ({\r\n              ...theme,\r\n              borderRadius: 2,\r\n              colors: {\r\n                ...theme.colors,\r\n                primary25: \"rgba(255,255,255,0.25)\",\r\n                primary50: \"rgba(255,255,255,0.50)\",\r\n                primary75: \"rgba(255,255,255,0.75)\",\r\n                primary: \"rgba(255,255,255,1)\",\r\n                neutral0: \"rgba(25,25,25,1)\",\r\n                neutral5: \"rgba(255,255,255,0.05)\",\r\n                neutral10: \"rgba(255,255,255,0.1)\",\r\n                neutral20: \"rgba(255,255,255,0.2)\",\r\n                neutral30: \"rgba(255,255,255,0.3)\",\r\n                neutral40: \"rgba(255,255,255,0.4)\",\r\n                neutral50: \"rgba(255,255,255,0.5)\",\r\n                neutral60: \"rgba(255,255,255,0.6)\",\r\n                neutral70: \"rgba(255,255,255,0.7)\",\r\n                neutral80: \"rgba(255,255,255,0.8)\",\r\n                neutral90: \"rgba(255,255,255,0.9)\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <label\r\n            className={\r\n              \"block text-gray-200 text-sm font-bold mb-2\" + formHeading\r\n            }\r\n          >\r\n            File to upload\r\n          </label>\r\n          <input\r\n            className=\"w-64 shadow appearance-none border rounded py-2 px-3 text-gray-800 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"file\"\r\n            placeholder=\"Select Upload\"\r\n            type=\"file\"\r\n            accept=\".pdf\"\r\n            value={userPdf}\r\n            onChange={(e) => setUserPdf(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between \">\r\n          {loading ? (\r\n            <Spinner color=\"gray-200\" />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              rounded=\"md\"\r\n              bgch=\"gray-600\"\r\n              bgc=\"white\"\r\n              color=\"white\"\r\n              colorh=\"white\"\r\n              classes={\"w-64 h-8 bg-gray-800 \" + formHeading}\r\n            >\r\n              Upload\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/FinancialInstitution/Components/List/index.js",["141","142","143","144","145","146","147"],"import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport moment from \"moment\";\r\n\r\nconst formHeading =\r\n  \" text-base tracking-wider font-bold font-sans px-6 py-3 text-left text-xs font-medium text-gray-500  tracking-wider\";\r\nconst inputCss = \"focus:outline-none focus:ring-4 focus:ring-green-600\";\r\nconst List = ({}) => {\r\n  const [list, setList] = React.useState([]);\r\n  const [flagToRefetch, setFlagToRefetch] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    toast.loading(\"Fetching Invoices\", { id: \"Inv\" });\r\n    let finId = JSON.parse(localStorage.getItem(\"user\"))._id;\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_SERVER_LINK}/file/fetchInvFinancial`,\r\n        { finId },\r\n        {\r\n          headers: {\r\n            Authorization: JSON.parse(localStorage.getItem(\"jwt\")),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Invoices Fetched\");\r\n        toast.dismiss(\"Inv\");\r\n        setList(res.data);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data);\r\n        toast.dismiss(\"Inv\");\r\n        console.error(error);\r\n      });\r\n  }, [flagToRefetch]);\r\n\r\n  const Approve = (id) => {\r\n    toast.loading(\"Approving\", { id: \"approve\" });\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_SERVER_LINK}/file/ApproveInvoice`,\r\n        { id },\r\n        {\r\n          headers: {\r\n            Authorization: JSON.parse(localStorage.getItem(\"jwt\")),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Approved\");\r\n        toast.dismiss(\"approve\");\r\n        setFlagToRefetch(!flagToRefetch);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data);\r\n        toast.dismiss(\"approve\");\r\n        console.error(error);\r\n        setFlagToRefetch(!flagToRefetch);\r\n      });\r\n  };\r\n\r\n  const Delete = (id) => {\r\n    toast.loading(\"Deleting\", { id: \"delete\" });\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_SERVER_LINK}/file/DeleteInvoice`,\r\n        { id },\r\n        {\r\n          headers: {\r\n            Authorization: JSON.parse(localStorage.getItem(\"jwt\")),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Deleted\");\r\n        toast.dismiss(\"delete\");\r\n        setFlagToRefetch(!flagToRefetch);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data);\r\n        toast.dismiss(\"delete\");\r\n        console.error(error);\r\n        setFlagToRefetch(!flagToRefetch);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"flex flex-col sm:w-4/5 lg:w-1/2 w-full my-12 \r\n    min-h-1/2 border shadow-lg \"\r\n    >\r\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Sr. No\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Date\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Company Name\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Invoice No.\r\n                  </th>\r\n                  <th scope=\"col\" className={formHeading}>\r\n                    Status\r\n                  </th>\r\n                  <th scope=\"col\" />\r\n                  <th scope=\"col\" />\r\n                  <th scope=\"col\" />\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {list.map((item, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {index + 1 || \"N/A\"}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {moment(item.createdAt).format(\"DD/MM/YYYY\") || \"N/A\"}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {moment(item.createdAt).format(\"hh:mm a\") || \"N/A\"}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {item.userId.name || \"N/A\"}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {item.userId.userName || \"N/A\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {item.invoice || \"N/A\"}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span\r\n                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                            item.status === \"pending\"\r\n                              ? \"bg-red-100 text-red-800\"\r\n                              : \"bg-green-100 text-green-800\"\r\n                          }`}\r\n                        >\r\n                          {item.status || \"N/A\"}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"pr-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <a\r\n                          href=\"#\"\r\n                          className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        >\r\n                          Show PDF\r\n                        </a>\r\n                      </td>\r\n                      <td className=\"pr-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        {console.log(item.userPdf.data)}\r\n                        {item.status === \"pending\" ? (\r\n                          <a\r\n                            onClick={() => {\r\n                              Approve(item._id);\r\n                            }}\r\n                            className=\"text-indigo-600 hover:text-indigo-900 cursor-pointer\"\r\n                          >\r\n                            Approve\r\n                          </a>\r\n                        ) : (\r\n                          <a className=\"text-gray-400\">Approved</a>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"pr-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        {item.status === \"pending\" ? (\r\n                          <a\r\n                            onClick={() => {\r\n                              Delete(item._id);\r\n                            }}\r\n                            className=\"text-indigo-600 hover:text-indigo-900 cursor-pointer\"\r\n                          >\r\n                            Delete\r\n                          </a>\r\n                        ) : (\r\n                          <a className=\"text-gray-400\">Delete</a>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Credentials/Components/LoginPage/index.tsx",["148"],"import * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport logo from \"../../../../utils/logo.png\";\r\nimport { Button } from \"../../../../Components/Atoms\";\r\nimport { Spinner } from \"../../../../Components/Atoms\";\r\nimport Select from \"react-select\";\r\n\r\ninterface IState {\r\n  userName: string;\r\n  password: string;\r\n  loading: boolean;\r\n}\r\n\r\ninterface IProps {\r\n  setPageToShow?: any;\r\n}\r\n\r\nconst formHeading = \" text-lg tracking-wider font-bold font-sans\";\r\nconst inputCss = \"focus:outline-none focus:ring-4 focus:ring-green-600\";\r\n\r\nconst Login: React.FC<IProps> = ({ setPageToShow }) => {\r\n  const [userName, setUserName] = React.useState<IState[\"userName\"]>(\"\");\r\n  const [password, setPassword] = React.useState<IState[\"password\"]>(\"\");\r\n  const [type, setType] = React.useState<string | undefined>(\"companies\");\r\n  const [loading, setLoading] = React.useState<IState[\"loading\"]>(false);\r\n  const history = useHistory();\r\n\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const userType = [\"financial institution\", \"companies\"];\r\n\r\n  const options: any = [];\r\n\r\n  const userTypeToOption = (userType: any) => {\r\n    userType.map((curr: any) => {\r\n      options.push({ value: curr, label: curr });\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const Submit = (e: any) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    toast.loading(\"Logging In\", { id: \"login\" });\r\n    axios\r\n      .post(`${process.env.REACT_APP_SERVER_LINK}/login/`, {\r\n        userName,\r\n        password,\r\n        type,\r\n      })\r\n      .then((res: any) => {\r\n        toast.success(`Welcome ${res.data.user.name}`, { duration: 4000 });\r\n        toast.dismiss(\"login\");\r\n        setLoading(false);\r\n        localStorage.setItem(\"jwt\", JSON.stringify(res.data.data.token));\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data);\r\n        toast.dismiss(\"login\");\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"z-50 absolute bg-black shadow-2xl rounded rounded-lg p-8 py-12\r\n       flex flex-col justify-center items-center \"\r\n      onSubmit={Submit}\r\n    >\r\n      <img\r\n        className=\"h-32 w-auto mb-6 rounded-full\"\r\n        src={logo}\r\n        alt=\"Crypto Wiz\"\r\n      />\r\n      <div className=\"mb-6\">\r\n        <Select\r\n          onChange={(e) => {\r\n            setType(e?.value);\r\n          }}\r\n          options={userTypeToOption(userType)}\r\n          defaultValue={{ label: \"companies\", value: \"companies\" }}\r\n          className=\"text-white w-64\"\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: 2,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: \"rgba(255,255,255,0.25)\",\r\n              primary50: \"rgba(255,255,255,0.50)\",\r\n              primary75: \"rgba(255,255,255,0.75)\",\r\n              primary: \"rgba(255,255,255,1)\",\r\n              neutral0: \"rgba(25,25,25,1)\",\r\n              neutral5: \"rgba(255,255,255,0.05)\",\r\n              neutral10: \"rgba(255,255,255,0.1)\",\r\n              neutral20: \"rgba(255,255,255,0.2)\",\r\n              neutral30: \"rgba(255,255,255,0.3)\",\r\n              neutral40: \"rgba(255,255,255,0.4)\",\r\n              neutral50: \"rgba(255,255,255,0.5)\",\r\n              neutral60: \"rgba(255,255,255,0.6)\",\r\n              neutral70: \"rgba(255,255,255,0.7)\",\r\n              neutral80: \"rgba(255,255,255,0.8)\",\r\n              neutral90: \"rgba(255,255,255,0.9)\",\r\n            },\r\n          })}\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label\r\n          className={\"block text-gray-200 text-sm font-bold mb-2\" + formHeading}\r\n        >\r\n          Username\r\n        </label>\r\n        <input\r\n          className={\r\n            \"w-64 shadow appearance-none border rounded py-2 px-3 text-gray-800 leading-tight focus:outline-none focus:shadow-outline\" +\r\n            inputCss\r\n          }\r\n          id=\"username\"\r\n          placeholder=\"Enter Username\"\r\n          onChange={(e) => setUserName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label\r\n          className={\"block text-gray-200 text-sm font-bold mb-2\" + formHeading}\r\n        >\r\n          Password\r\n        </label>\r\n        <input\r\n          className={\r\n            \"w-64 shadow appearance-none border rounded py-2 px-3 text-gray-800 leading-tight focus:outline-none focus:shadow-outline\" +\r\n            inputCss\r\n          }\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        {loading ? (\r\n          <Spinner color=\"gray-200\" />\r\n        ) : (\r\n          <Button\r\n            type=\"submit\"\r\n            rounded=\"md\"\r\n            bgch=\"gray-600\"\r\n            bgc=\"white\"\r\n            color=\"white\"\r\n            colorh=\"white\"\r\n            classes={\"w-64 h-8 bg-gray-800\" + formHeading}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className=\"w-full flex justify-center items-center\">\r\n        <p>\r\n          <p\r\n            className=\"font-light antialiased text-md cursor-pointer\r\n            text-gray-400 hover:text-gray-200\"\r\n            onClick={() => {\r\n              setPageToShow(\"register\");\r\n            }}\r\n          >\r\n            New user? Register\r\n          </p>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/Users/info/Documents/GitHub/invorify/frontend/src/Routes/Credentials/Components/RegistrationPage/index.tsx",["149"],"import * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport logo from \"../../../../utils/logo.png\";\r\nimport { Button } from \"../../../../Components/Atoms\";\r\nimport { Spinner } from \"../../../../Components/Atoms\";\r\nimport Select from \"react-select\";\r\n\r\ninterface IProps {\r\n  setPageToShow?: any;\r\n}\r\n\r\nconst Register: React.FC<IProps> = ({ setPageToShow }) => {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [type, setType] = React.useState<string | undefined>(\"companies\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const history = useHistory();\r\n\r\n  const userType = [\"financial institution\", \"companies\"];\r\n\r\n  const options: any = [];\r\n\r\n  const userTypeToOption = (userType: any) => {\r\n    userType.map((curr: any) => {\r\n      options.push({ value: curr, label: curr });\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const Submit = (e: any) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    toast.loading(\"Logging In\", { id: \"login\" });\r\n    axios\r\n      .post(`${process.env.REACT_APP_SERVER_LINK}/register/`, {\r\n        name,\r\n        userName,\r\n        password,\r\n        type,\r\n      })\r\n      .then((res: any) => {\r\n        toast.success(`Registered as ${res.data.name || \"\"}`, { duration: 4000 });\r\n        toast.dismiss(\"login\");\r\n        setLoading(false);\r\n        history.push(\"/login\");\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data);\r\n        toast.dismiss(\"login\");\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"z-50 absolute bg-black shadow-2xl rounded rounded-lg p-12 px-8 flex flex-col justify-center items-center \"\r\n      onSubmit={Submit}\r\n    >\r\n      <img className=\"h-12 w-auto mb-6\" src={logo} alt=\"Crypto Wiz\" />\r\n      <div className=\"mb-6\">\r\n        <Select\r\n          onChange={(e) => {\r\n            setType(e?.value);\r\n          }}\r\n          options={userTypeToOption(userType)}\r\n          defaultValue={{ label: \"companies\", value: \"companies\" }}\r\n          className=\"text-white w-64\"\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: 2,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: \"rgba(255,255,255,0.25)\",\r\n              primary50: \"rgba(255,255,255,0.50)\",\r\n              primary75: \"rgba(255,255,255,0.75)\",\r\n              primary: \"rgba(255,255,255,1)\",\r\n              neutral0: \"rgba(25,25,25,1)\",\r\n              neutral5: \"rgba(255,255,255,0.05)\",\r\n              neutral10: \"rgba(255,255,255,0.1)\",\r\n              neutral20: \"rgba(255,255,255,0.2)\",\r\n              neutral30: \"rgba(255,255,255,0.3)\",\r\n              neutral40: \"rgba(255,255,255,0.4)\",\r\n              neutral50: \"rgba(255,255,255,0.5)\",\r\n              neutral60: \"rgba(255,255,255,0.6)\",\r\n              neutral70: \"rgba(255,255,255,0.7)\",\r\n              neutral80: \"rgba(255,255,255,0.8)\",\r\n              neutral90: \"rgba(255,255,255,0.9)\",\r\n            },\r\n          })}\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-gray-200 text-sm font-bold mb-2\">\r\n          Name\r\n        </label>\r\n        <input\r\n          className=\"w-64 shadow appearance-none border rounded py-2 px-3 text-gray-800 leading-tight focus:outline-none focus:shadow-outline\"\r\n          id=\"username\"\r\n          placeholder=\"Enter Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-gray-200 text-sm font-bold mb-2\">\r\n          Username\r\n        </label>\r\n        <input\r\n          className=\"w-64 shadow appearance-none border rounded py-2 px-3 text-gray-800 leading-tight focus:outline-none focus:shadow-outline\"\r\n          id=\"username\"\r\n          placeholder=\"Enter Username\"\r\n          value={userName}\r\n          onChange={(e) => setUserName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-gray-200 text-sm font-bold mb-2\">\r\n          Password\r\n        </label>\r\n        <input\r\n          className=\"w-64 shadow appearance-none border rounded py-2 px-3 text-gray-800 leading-tight focus:outline-none focus:shadow-outline\"\r\n          id=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        {loading ? (\r\n          <Spinner color=\"gray-200\" />\r\n        ) : (\r\n          <Button\r\n            type=\"submit\"\r\n            rounded=\"md\"\r\n            bgch=\"gray-600\"\r\n            bgc=\"white\"\r\n            color=\"white\"\r\n            colorh=\"white\"\r\n            classes=\"w-64 h-8 bg-gray-800\"\r\n          >\r\n            Register\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <p\r\n        className=\"font-light antialiased text-md cursor-pointer\r\n        text-gray-400 hover:text-gray-200\"\r\n        onClick={() => {\r\n          setPageToShow(\"login\");\r\n        }}\r\n      >\r\n        Already a user? Login\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":133,"column":33,"nodeType":"156","endLine":139,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":146,"column":33,"nodeType":"156","endLine":152,"endColumn":34},{"ruleId":"154","severity":1,"message":"157","line":159,"column":33,"nodeType":"156","endLine":164,"endColumn":34},{"ruleId":"154","severity":1,"message":"157","line":15,"column":13,"nodeType":"156","endLine":18,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":25,"column":13,"nodeType":"156","messageId":"160","endLine":25,"endColumn":59,"fix":"161"},{"ruleId":"158","severity":1,"message":"159","line":28,"column":13,"nodeType":"156","messageId":"160","endLine":28,"endColumn":68,"fix":"162"},{"ruleId":"158","severity":1,"message":"159","line":31,"column":13,"nodeType":"156","messageId":"160","endLine":31,"endColumn":60,"fix":"163"},{"ruleId":"158","severity":1,"message":"159","line":34,"column":13,"nodeType":"156","messageId":"160","endLine":34,"endColumn":66,"fix":"164"},{"ruleId":"165","severity":1,"message":"166","line":8,"column":7,"nodeType":"167","messageId":"168","endLine":8,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":10,"column":15,"nodeType":"171","messageId":"172","endLine":10,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":137,"column":25,"nodeType":"156","endLine":140,"endColumn":26},{"ruleId":"154","severity":1,"message":"157","line":145,"column":25,"nodeType":"156","endLine":150,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":13,"column":15,"nodeType":"171","messageId":"172","endLine":13,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":24,"column":25,"nodeType":"175","messageId":"176","endLine":24,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":8,"column":7,"nodeType":"167","messageId":"168","endLine":8,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":9,"column":15,"nodeType":"171","messageId":"172","endLine":9,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":161,"column":25,"nodeType":"156","endLine":164,"endColumn":26},{"ruleId":"154","severity":1,"message":"157","line":171,"column":27,"nodeType":"156","endLine":176,"endColumn":28},{"ruleId":"154","severity":1,"message":"157","line":180,"column":27,"nodeType":"156","endLine":180,"endColumn":56},{"ruleId":"154","severity":1,"message":"157","line":185,"column":27,"nodeType":"156","endLine":190,"endColumn":28},{"ruleId":"154","severity":1,"message":"157","line":194,"column":27,"nodeType":"156","endLine":194,"endColumn":56},{"ruleId":"173","severity":1,"message":"174","line":41,"column":30,"nodeType":"175","messageId":"176","endLine":41,"endColumn":32},{"ruleId":"173","severity":1,"message":"174","line":28,"column":30,"nodeType":"175","messageId":"176","endLine":28,"endColumn":32},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"179","text":"180"},{"range":"181","text":"180"},{"range":"182","text":"180"},{"range":"183","text":"180"},"no-unused-vars","'inputCss' is assigned a value but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",[1106,1106]," rel=\"noreferrer\"",[1264,1264],[1416,1416],[1573,1573]]